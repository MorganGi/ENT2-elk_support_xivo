input {
  file {
    path => "/var/tmp/elkforxivo/asterisk-ful*"
    type => "asterisk-full"
    start_position => "beginning"
  }
  file {
    path => "/var/tmp/elkforxivo/syslog"
    type => "syslog"
    start_position => "beginning"
  }
file {
    path => "/var/tmp/elkforxivo/xuc*.log"
    type => "xuc"
    start_position => "beginning"
  }

  file {
    path => "/var/tmp/elkforxivo/xivo-authd"
    type => "xivo-daemon"
    start_position => "beginning"
  }
  file {
    path => "/var/tmp/elkforxivo/xivo-ctid"
    type => "xivo-daemon"
    start_position => "beginning"
  }
  file {
    path => "/var/tmp/elkforxivo/xivo-confd"
    type => "xivo-daemon"
    start_position => "beginning"
  }
  file { 
    path => "/var/tmp/elkforxivo/access*.log" 
    type => "nginx"
    start_position => "beginning"
  }

}

filter {
  if [type] == "asterisk-full" {
    grok {
      patterns_dir => "/etc/logstash/conf.d/patterns"
      match => { "message" => "%{ASTLOG}" }
      remove_field => "message"
    }
    date {
      match => [ "asterisk_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}

filter {
  if [type] == "xuc" {
    grok {
      patterns_dir => "/etc/logstash/conf.d/patterns"
      match => { "message" => "%{TEMPLATE}" }
      remove_field => "message"
    }
    date {
      match => [ "xuc_timestamp" , "ISO8601" ]
    }
   
mutate {
	
	convert => {
			"xuc_nb_connected_total" => "integer"
			"xuc_nb_client_disconnected" => "integer"
			"xuc_paquetLoss_downstream" => "integer"
			"xuc_paquetLoss_upstream" => "integer"
			"xuc_value_memory" => "float"
			"xuc_temps_reponse" => "float"
			"xuc_jitter_upstream" => "float"
			"xuc_jitter_downstream" => "float"
	}
		
    }
  }
}



filter {
if [type] == "nginx" {
    grok {
        match => { "message" => ["%{IPORHOST:[nginx][access][remote_ip]} - %{DATA:[nginx][access][user_name]} \[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]} \"%{DATA:[nginx][access][referrer]}\" \"%{DATA:[nginx][access][agent]}\""] }
        remove_field => "message"
      }
      mutate {
        add_field => { "read_timestamp" => "%{@timestamp}" }
      }
      date {
        match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
        remove_field => "[nginx][access][time]"
      }
      useragent {
        source => "[nginx][access][agent]"
        target => "[nginx][access][user_agent]"
        remove_field => "[nginx][access][agent]"
      }
      geoip {
        source => "[nginx][access][remote_ip]"
      }
  }
}
filter {
  if [type] == "xivo-daemon" {
    grok {
      patterns_dir => "/etc/logstash/conf.d/patterns"
      match => { "message" => "%{XDAEMONLOG}" }
    }
	date {
		match => [ "xdaemon_timestamp", "ISO8601" ]
	}
  }
}

output {
	stdout { 
		codec => "rubydebug" 
	}
  	
	elasticsearch {
    		hosts => ["localhost"]
    		manage_template => false
    		index => "nginx-only"
  	}
}


