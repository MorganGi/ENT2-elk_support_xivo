
filter {
  if [type] == "asterisk" {
    grok {
      patterns_dir => "/opt/logstash/patterns"
      match => { "message" => "%{ASTLOG}" }
      remove_field => "message"
    }
    date {
      match => [ "asterisk_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}

filter {
  if [type] == "xuc" {
    grok {
      patterns_dir => "/opt/logstash/patterns"
      match => { "message" => "%{TEMPLATE}" }
      remove_field => ["message","xuc_greedydata_dialing", "xuc-greedydata_unknown","symbole_inutile","xuc_general_greedydata"]
    }
    date {
      match => [ "xuc_timestamp" , "ISO8601" ]
    }
   
mutate {
	
	convert => {
			"xuc_nb_connected_total" => "integer"
			"xuc_nb_client_disconnected" => "integer"
			"xuc_paquetLoss_downstream" => "integer"
			"xuc_paquetLoss_upstream" => "integer"
			"xuc_value_memory" => "float"
			"xuc_temps_reponse" => "float"
			"xuc_jitter_upstream" => "float"
			"xuc_jitter_downstream" => "float"
	}
		
    }
  }
}



filter {
if [type] == "nginx" {
    grok {
	patterns_dir => "/opt/logstash/patterns"
        match => { "message" => "%{NGINXACCESS}"}
        remove_field => "message"
      }
      date {
        match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
        remove_field => "[nginx][access][time]"
      }
      useragent {
        source => "[nginx][access][agent]"
        target => "[nginx][access][user_agent]"
        remove_field => "[nginx][access][agent]"
      }
      geoip {
        source => "[nginx][access][remote_ip]"
	target => "geoip"
	add_tag => ["geoip"]
	add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
	add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}" ]      
	}
	mutate {
        add_field => { "read_timestamp" => "%{@timestamp}" }
	convert => [ "[geoip][coordinates]", "float" ] 
      }
  }
 }

